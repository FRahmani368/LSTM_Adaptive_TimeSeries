##### This is an example .yaml file for how you should make your config file
##### See below for what you need to have
##### Make sure the paths are correct. They are individual to your machine

#----------------------------------------------------------
###### models configurations
randomseed: [0]   # None means random
Action: ["Train", "Test"]   # Train: Do training,   Test: Do testing
device: "cuda"

#---------------------------------------------------------
##### Directories of forcings, attributes, and output
forcing_path: "H:\\Frshd\\inputs\\PGML_STemp_results\\inputs\\inputs_2003\\dataset_20240826\\f1223_1023_daymet_20240826.npy"
attr_path: "H:\\Frshd\\inputs\\PGML_STemp_results\\inputs\\inputs_2003\\dataset_20240826\\attr1223_1023_daymet_20240826.npy"
output_model: "H:\\Frshd\\models"

#----------------------------------------------------------
##### neural network configuration
NN_model_name: "LSTM"   # it can be "MLP", "LSTM" too.
warm_up: 0
rho: 365
batch_size: 100
EPOCHS: 5
hidden_size: 256
dropout: 0.5
saveEpoch: 1
EPOCH_testing: 5   # which epoch you want to pick to test?### you can choose different types of loss functions based on your need:
no_basins: 25   # number of basins sampled in testing

#----------------------------------------------------------
##### Inputs lists
varT_NN: ['prcp(mm/day)', 'tmean(C)', 'dayl(s)', "PET_hargreaves(mm/day)"]   # 'dayl(s)', , 'tmin(C)', 'vp(Pa)','srad(W/m2)', pet_nldas
varC_NN: [
  ############   for mswep inputs
  'aridity', 'p_mean', 'ETPOT_Hargr', 'NDVI', 'FW', 'SLOPE_PCT', 'SoilGrids1km_sand',
  'SoilGrids1km_clay', 'SoilGrids1km_silt', 'glaciers', 'HWSD_clay', 'HWSD_gravel',
  'HWSD_sand', 'HWSD_silt', 'ELEV_MEAN_M_BASIN', 'meanTa', 'permafrost',
  'permeability','seasonality_P', 'seasonality_PET', 'snow_fraction',
  'snowfall_fraction','T_clay','T_gravel','T_sand', 'T_silt','Porosity',
  "DRAIN_SQKM"
]

#------------------------------------------------------------
## Choosing loss function
   ###  1- "RmseLoss_flow_comb",            2- "RmseLoss_flow_temp",      3- "RmseLoss_flow_temp_BFI"
   ###  4- "RmseLoss_flow_temp_BFI_PET",    5- "RmseLoss_BFI_temp"   ,    6- "NSEsqrtLoss_flow_temp"
   ###  7- "NSEsqrtLoss_flow"
loss_function: "RmseLoss_flow_comb"
loss_function_weights:
    w1: 5      # w1: flow loss weight (11.0), for RmseLoss_BFI_temp(w1=5.0, w2=1.0, w3=0.05,)
    w2: 1.0
target: ["00060_Mean"]#, "00010_Mean"]#, "BFI_AVE"] #, "BFI_AVE", "PET"]     #

#-------------------------------------------------------
# time ranges of dataset + training + testing
tRange: [19800101, 20230101]
t_train: [19800101, 20230101]   # there should be an overlap because of the warm_up
t_test: [20100101, 20230101]    # the first year is for warm_up

#------------------------------------------------------
D_N_P_path: "G:\\Farshid\\GitHub\\LSTM_Adaptive_TimeSeries\\D_N_P.xlsx"